;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(setenv-history read-envvar-name-history tex-compile-history woman-topic-history query-replace-history info-lookup-history iswitchb-history read-expression-history minibuffer-history shell-command-history extended-command-history command-history search-ring yes-or-no-p-history buffer-name-history compile-history evil-ex-history file-name-history))
(setq read-envvar-name-history '("PATH" "#PATH"))
(setq query-replace-history '("getn" "get" "int32" "int" "json;" "l ;" "attr_str" "attr_string" "json;" "l;" "json;" "l;" "json" "l" "attr_int" "find_attr_int" "attr_string" "find_attr_string" "" ")" "find_attr_string" "attr_string (find_attr" "find_attr_int" "attr_int (find_attr" "Sql.get sql" "sql?" "(Sql.get sql" "sql?" "Sql.get sql" "sql!"))
(setq read-expression-history '("q" "wq" "q" ":q" "q" "w" "wq"))
(setq minibuffer-history '("/usr/bin/fish" "/bin/zsh" "compilation-environment" "load-path" "fr-80"))
(setq shell-command-history '("ocaml" "./minic test.c"))
(setq extended-command-history '("eval-buffer" "color-theme-molokai" "color-theme-hober" "eval-buffer" "term" "eval-buffer" "terminal-emulator" "eval-buffer" "kill-compilation" "eval-buffer" "compile" "term" "eval-current-buffer" "eval-buffer" "getenv" "setenv" "compile" "eval-region" "flyspell-auto-correct-previous-hook" "flyspell-auto-correct-previous-word" "ispell-minor-check" "ispell-change-dictionary" "compile" "eval-buffer" "compile" "doctor" "color-theme-aliceblue" "color-theme-classic" "color-theme-submit" "color-theme-word-perfect"))
(setq command-history '((eval-buffer) (execute-extended-command nil "eval-buffer") (color-theme-molokai) (execute-extended-command nil "color-theme-molokai") (color-theme-hober) (execute-extended-command nil "color-theme-hober") (evil-change 2127 2133 'exclusive nil nil) (eval-buffer) (execute-extended-command nil "eval-buffer") (eval-buffer) (execute-extended-command nil "eval-buffer") (evil-delete 2114 2115 'line nil nil) (find-file "~/.emacs" t) (evil-delete 2115 2142 'line nil nil) (eval-buffer) (execute-extended-command nil "eval-buffer") (evil-yank 2028 2071 'line nil nil) (evil-delete 2026 2027 'line nil nil) (evil-delete 2026 2027 'line nil nil) (evil-delete 2071 2093 'line nil nil) (evil-delete 1485 1530 'line nil nil) (evil-yank 1385 1435 'line nil nil) (find-file "~/.emacs" t) (evil-delete 1913 1923 'line nil nil) (evil-delete 1890 1895 'line nil nil) (evil-delete 1971 1972 'line nil nil) (evil-delete 1427 1464 'line nil nil) (evil-delete 1433 1440 'exclusive nil nil) (evil-delete 1427 1492 'line nil nil) (evil-yank 1893 1898 'line nil nil) (evil-change 1850 1857 'exclusive nil nil)))
(setq search-ring '("w" "rrr" "uuu"))
(setq yes-or-no-p-history '("yes" "ys" "yes" "no" "o" "yes" "no" "yes" "no" "yes" "ys" "yes" "ye" "yes" "ys" "yes" "no" "yes" "ys" "yes" "no" "yes" "no" "yes" "q" "!" "yes" "!" "yes" "no"))
(setq buffer-name-history '("style.css" "Makefile" "Ghanem_Synthese1.tex" "*terminal*" "xmonad.hs" ".emacs" "appenv.ml" "tests.ml" "session.mli" "session.ml" "user.mli" "user.ml" "connection_service.ml" "doc.ml" "json_utils.ml" "registrar.ml" "appenv_service.ml" "*Process List*" "*Completions*" "*WoMan-Log*" "Makefile.options" "admin_connection.ml" "api.eliom" "admin_connection.ml" "user.ml" "registrar.ml" "admin_connection.ml" "user.mli" "doc.ml" "Makefile.options"))
(setq compile-history '("make -k " "rubber -d Besognet-Review-Ghanem.tex " "rubbder -d Besognet-Review-Ghanem.tex " "make -k " "make" "xmonad --recompile" "make -k " "make" "make -k " "make " "make -k " "make test.byte" "make -k " "make test.byte" "make" "make -k " "make test.byte" "make" "make -k " "make test.byte" "make clean" "make clear" "make -k test.byte" "make test.byte" "make clean" "make test.byte" "make clean" "make test.byte" "make clean" "make test.byte"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("qw" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("read /home/remy/dev/graal/etatArt/Synthese1/Ghanem_Synthese1.tex" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59) 59 60 (ex-index 60) 60 61 (ex-index 61) 61 62 (ex-index 62) 62 63 (ex-index 63) 63 64 (ex-index 64)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("Q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("18" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq file-name-history '("~/.emacs" "~/dev/persoAtlip6/style.css" "~/dev/persoAtlip6/index.html" "~/dev/graal/rbesognet/Makefile" "~/dev/graal/etatArt/Synthese1/Ghanem_Synthese1.tex" "~/dev/graal/rbesognet/Besognet-Review-Ghanem.tex" "~/.xmonad/xmonad.hs" "~/dev/graal/rbesognet/Besognet-Synthese1.tex" "~/.xmonad/xmonad.hs" "~/.emacs" "~/dev/graal/rbesognet/Besognet-Synthese1.tex" "~/.emacs" "~/dev/graal/rbesognet/Besognet-Synthese1.tex" "~/.emacs" "~/dev/graal/rbesognet/Besognet-Synthese1.tex" "~/xrandr_config" "~/.xmonad/xmonad.hs" "~/.emacs" "~/.xmonad/xmonadhs" "~/.xmobarrc" "~/.emacs" "~/api/user.ml" "~/api/#tests.ml#" "~/api/table.ml" "~/api/tests.ml" "~/api/table.ml" "~/log.txt" "~/api/user.ml" "~/api/session.ml" "~/api/doc.ml"))
